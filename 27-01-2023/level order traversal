/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> l1 = new ArrayList<>();
        Queue<TreeNode> que = new LinkedList<>();
        List<Integer> l2 = new ArrayList<>();
        System.out.println(l1);
        if(root == null){
            return l1;
        } 
        l2.add(root.val);
        l1.add(l2);
        que.add(root);
        while(!que.isEmpty()){
            ArrayList<Integer> l3 = new ArrayList<>();
            int size= que.size();
            for(int i=1;i<=size;i++){
                TreeNode cur = que.poll();
                System.out.println(cur.val);
                if(cur.left!=null){
                    l3.add(cur.left.val);
                    que.add(cur.left);
                }
                if(cur.right!=null){
                    l3.add(cur.right.val);
                    que.add(cur.right);
                }
                
            }
            if(!l3.isEmpty()){
                    l1.add(l3);
                }
        }

       return l1; 
    }
}
